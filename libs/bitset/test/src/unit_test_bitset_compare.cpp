/**
 *	@file	unit_test_bitset_compare.cpp
 *
 *	@brief	比較演算子のテスト
 *
 *	constexpr bool operator==(const bitset& rhs) const noexcept;
 */

#include <hamon/bitset.hpp>
#include <gtest/gtest.h>
#include "constexpr_test.hpp"

GTEST_TEST(BitsetTest, CompareTest)
{
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<0> b0;
		HAMON_CXX11_CONSTEXPR hamon::bitset<0> b1;
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b1);
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<7> b0("1011001");
		HAMON_CXX11_CONSTEXPR hamon::bitset<7> b1("1011001");
		HAMON_CXX11_CONSTEXPR hamon::bitset<7> b2("0011001");
		HAMON_CXX11_CONSTEXPR hamon::bitset<7> b3("1011000");

		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b3);

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b3);
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<8> b0("10110001");
		HAMON_CXX11_CONSTEXPR hamon::bitset<8> b1("10110001");
		HAMON_CXX11_CONSTEXPR hamon::bitset<8> b2("00110001");
		HAMON_CXX11_CONSTEXPR hamon::bitset<8> b3("10110000");

		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b3);

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b3);
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<9> b0("101101001");
		HAMON_CXX11_CONSTEXPR hamon::bitset<9> b1("101101001");
		HAMON_CXX11_CONSTEXPR hamon::bitset<9> b2("001101001");
		HAMON_CXX11_CONSTEXPR hamon::bitset<9> b3("101101000");

		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b3);

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b3);
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<63> b0("000000000000000000000000000000000000000000000000000000000000000");
		HAMON_CXX11_CONSTEXPR hamon::bitset<63> b1("000000000000000000000000000000000000000000000000000000000000000");
		HAMON_CXX11_CONSTEXPR hamon::bitset<63> b2("100000000000000000000000000000000000000000000000000000000000000");
		HAMON_CXX11_CONSTEXPR hamon::bitset<63> b3("000000000000000000000000000000000000000000000000000000000000001");

		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b3);

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b3);
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<64> b0("0101111101011111010111110101111101011111010111110101111101011111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<64> b1("0101111101011111010111110101111101011111010111110101111101011111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<64> b2("1101111101011111010111110101111101011111010111110101111101011111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<64> b3("0101111101011111010111110101111101011111010111110101111101011110");

		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b3);

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b3);
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<127> b0("1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<127> b1("1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<127> b2("1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110");
		HAMON_CXX11_CONSTEXPR hamon::bitset<127> b3("0111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111");

		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 == b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 == b3);

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b0);
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0 != b1);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b2);
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b0 != b3);
	}
}
