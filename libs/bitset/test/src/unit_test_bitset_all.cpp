/**
 *	@file	unit_test_bitset_all.cpp
 *
 *	@brief	all関数のテスト
 *
 *	constexpr bool all() const noexcept;
 */

#include <hamon/bitset.hpp>
#include <gtest/gtest.h>
#include "constexpr_test.hpp"

GTEST_TEST(BitsetTest, AllTest)
{
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<0> b0;
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE(b0.all());
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<1> b0{};
		HAMON_CXX11_CONSTEXPR hamon::bitset<1> b1{1};

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b1.all());
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<4> b0("0000");
		HAMON_CXX11_CONSTEXPR hamon::bitset<4> b1("1110");
		HAMON_CXX11_CONSTEXPR hamon::bitset<4> b2("0111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<4> b3("1111");

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b1.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b2.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b3.all());
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<9> b0("000000000");
		HAMON_CXX11_CONSTEXPR hamon::bitset<9> b1("011111111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<9> b2("111101111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<9> b3("111111110");
		HAMON_CXX11_CONSTEXPR hamon::bitset<9> b4("111111111");

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b1.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b2.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b3.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b4.all());
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<63> b0("000000000000000000000000000000000000000000000000000000000000000");
		HAMON_CXX11_CONSTEXPR hamon::bitset<63> b1("011111111111111111111111111111111111111111111111111111111111111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<63> b2("111111111111111111111011111111111111111111111111111111111111111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<63> b3("111111111111111111111111111111111111111111111111111111111111110");
		HAMON_CXX11_CONSTEXPR hamon::bitset<63> b4("111111111111111111111111111111111111111111111111111111111111111");

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b1.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b2.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b3.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b4.all());
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<65> b0("00000000000000000000000000000000000000000000000000000000000000000");
		HAMON_CXX11_CONSTEXPR hamon::bitset<65> b1("1111111111111111111111111111111111111111111111111111111111111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<65> b2("111111111111111111111111111111111111111111111111111111111111111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<65> b3("1111111111111111111111111111111111111111111111111111111111111111");
		HAMON_CXX11_CONSTEXPR hamon::bitset<65> b4("11111111111111111111111111111111111111111111111111111111111111111");

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b1.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b2.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b3.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b4.all());
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<127> b0(0);
		HAMON_CXX11_CONSTEXPR hamon::bitset<127> b1(1);
		HAMON_CXX11_CONSTEXPR hamon::bitset<127> b2 = ~hamon::bitset<127>{};

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b1.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b2.all());
	}
	{
		HAMON_CXX11_CONSTEXPR hamon::bitset<128> b0(0);
		HAMON_CXX11_CONSTEXPR hamon::bitset<128> b1(1);
		HAMON_CXX11_CONSTEXPR hamon::bitset<128> b2 = ~hamon::bitset<128>{};

		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b0.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_FALSE(b1.all());
		HAMON_CXX11_CONSTEXPR_EXPECT_TRUE (b2.all());
	}
}
